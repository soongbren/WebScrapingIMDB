# -*- coding: utf-8 -*-
"""Web Scraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17OVBYjOgk8Z3qoLy0-k0yKMcaxNhFnZS
"""

# importing required libraries
import requests 
from bs4 import BeautifulSoup

# send request to download the data
url= requests.get('https://www.imdb.com/chart/top/')
# Lets check the the url is valid or not 
url.raise_for_status()

# Now we have to get html written code here by using parser
soup= BeautifulSoup(url.text,'html.parser')

# Now we have find the tag in html file for 250 movies 
movies= soup.find('tbody', class_= 'lister-list') 
# find will try to match the first tag who has 'tbody' and class with 'lister-list'
#Here class is different meaning in python, so we will use class with underscore  "class_"

# from tbody we have find all 'tr' tags which is movie list of 250 movies
movies=movies.find_all('tr')

# I will for loop for extracting 250 movies name
movie_details=[]
for movie in movies:
    name= movie.find('td', class_="titleColumn").a.text 
# We are fetching the name of movies by first entring into the 'td' tag then 'a'tag then fetching the text of 'a' tag
    name1= movie.find('td', class_="titleColumn").text # Here we are getting spaces and not formated 
    name2= movie.find('td', class_="titleColumn").get_text(strip= True) # Here we remove the all the spaces 
    
    #rank
    rank= movie.find('td', class_="titleColumn").get_text(strip= True).split('.')[0] 
    # Here i am using split so, it will split into two string and indexing 1st element 
    
    #year
    year= movie.find('td', class_="titleColumn").span.text 
    # first entering into thr 'td' tag then 'span'tag from there fetching text
    year1= year.strip('()') # Here i am stripping '()'
    
    # Rating, 
    rating=movie.find('td', class_= 'ratingColumn imdbRating').strong.text

    
    print(rank,name,year1,rating)
    movie_details.append([rank,name,year1,rating])

import pandas as pd
df= pd.DataFrame(movie_details, columns=['Rating','Movie_name','Year_realse','IMDB_rating'])
df.head()

# Data to excel
df.to_excel(r'Top Movies.xlsx',index=False)

